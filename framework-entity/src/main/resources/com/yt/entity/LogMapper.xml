<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yt.entity.LogMapper" >
  <resultMap id="BaseResultMap" type="com.yt.entity.mybatis.Log" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="class_name" property="className" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="is_success" property="isSuccess" jdbcType="INTEGER" />
    <result column="spend_time" property="spendTime" jdbcType="INTEGER" />
    <result column="entity_name" property="entityName" jdbcType="VARCHAR" />
    <result column="actions" property="actions" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yt.entity.mybatis.Log" extends="BaseResultMap" >
    <result column="log_info" property="logInfo" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, class_name, create_user, create_date, is_success, spend_time, entity_name, actions
  </sql>
  <sql id="Blob_Column_List" >
    log_info
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yt.entity.mybatis.LogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yt.entity.mybatis.LogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yt.entity.mybatis.LogExample" >
    delete from t_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yt.entity.mybatis.Log" >
    insert into t_log (id, class_name, create_user, 
      create_date, is_success, spend_time, 
      entity_name, actions, log_info
      )
    values (#{id,jdbcType=INTEGER}, #{className,jdbcType=VARCHAR}, #{createUser,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{isSuccess,jdbcType=INTEGER}, #{spendTime,jdbcType=INTEGER}, 
      #{entityName,jdbcType=VARCHAR}, #{actions,jdbcType=VARCHAR}, #{logInfo,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yt.entity.mybatis.Log" >
    insert into t_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="className != null" >
        class_name,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="isSuccess != null" >
        is_success,
      </if>
      <if test="spendTime != null" >
        spend_time,
      </if>
      <if test="entityName != null" >
        entity_name,
      </if>
      <if test="actions != null" >
        actions,
      </if>
      <if test="logInfo != null" >
        log_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="className != null" >
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isSuccess != null" >
        #{isSuccess,jdbcType=INTEGER},
      </if>
      <if test="spendTime != null" >
        #{spendTime,jdbcType=INTEGER},
      </if>
      <if test="entityName != null" >
        #{entityName,jdbcType=VARCHAR},
      </if>
      <if test="actions != null" >
        #{actions,jdbcType=VARCHAR},
      </if>
      <if test="logInfo != null" >
        #{logInfo,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yt.entity.mybatis.LogExample" resultType="java.lang.Integer" >
    select count(*) from t_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.className != null" >
        class_name = #{record.className,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isSuccess != null" >
        is_success = #{record.isSuccess,jdbcType=INTEGER},
      </if>
      <if test="record.spendTime != null" >
        spend_time = #{record.spendTime,jdbcType=INTEGER},
      </if>
      <if test="record.entityName != null" >
        entity_name = #{record.entityName,jdbcType=VARCHAR},
      </if>
      <if test="record.actions != null" >
        actions = #{record.actions,jdbcType=VARCHAR},
      </if>
      <if test="record.logInfo != null" >
        log_info = #{record.logInfo,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_log
    set id = #{record.id,jdbcType=INTEGER},
      class_name = #{record.className,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      is_success = #{record.isSuccess,jdbcType=INTEGER},
      spend_time = #{record.spendTime,jdbcType=INTEGER},
      entity_name = #{record.entityName,jdbcType=VARCHAR},
      actions = #{record.actions,jdbcType=VARCHAR},
      log_info = #{record.logInfo,jdbcType=LONGVARBINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_log
    set id = #{record.id,jdbcType=INTEGER},
      class_name = #{record.className,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      is_success = #{record.isSuccess,jdbcType=INTEGER},
      spend_time = #{record.spendTime,jdbcType=INTEGER},
      entity_name = #{record.entityName,jdbcType=VARCHAR},
      actions = #{record.actions,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yt.entity.mybatis.Log" >
    update t_log
    <set >
      <if test="className != null" >
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isSuccess != null" >
        is_success = #{isSuccess,jdbcType=INTEGER},
      </if>
      <if test="spendTime != null" >
        spend_time = #{spendTime,jdbcType=INTEGER},
      </if>
      <if test="entityName != null" >
        entity_name = #{entityName,jdbcType=VARCHAR},
      </if>
      <if test="actions != null" >
        actions = #{actions,jdbcType=VARCHAR},
      </if>
      <if test="logInfo != null" >
        log_info = #{logInfo,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yt.entity.mybatis.Log" >
    update t_log
    set class_name = #{className,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      is_success = #{isSuccess,jdbcType=INTEGER},
      spend_time = #{spendTime,jdbcType=INTEGER},
      entity_name = #{entityName,jdbcType=VARCHAR},
      actions = #{actions,jdbcType=VARCHAR},
      log_info = #{logInfo,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yt.entity.mybatis.Log" >
    update t_log
    set class_name = #{className,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      is_success = #{isSuccess,jdbcType=INTEGER},
      spend_time = #{spendTime,jdbcType=INTEGER},
      entity_name = #{entityName,jdbcType=VARCHAR},
      actions = #{actions,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>